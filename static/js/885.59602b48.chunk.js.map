{"version":3,"file":"static/js/885.59602b48.chunk.js","mappings":"+LAGIA,E,8HCFJ,EAA8B,iCAA9B,EAAiF,qCAAjF,EAAmI,gC,SCI7HC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAoBD,OApBCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAEFC,MAAM,CACFC,KAAK,GACLC,OAAO,IAFL,EAMNC,aAAc,SAAAC,GACV,MAAuBA,EAAEC,OAAlBJ,EAAP,EAAOA,KAAMK,EAAb,EAAaA,MACT,EAAKC,UAAL,UAAgBN,EAAMK,GAC7B,IAEDE,aAAe,SAAAJ,GACXA,EAAEK,iBACF,MAAsB,EAAKT,MAApBC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,OACRD,GAAQC,IACZ,EAAKQ,MAAMC,aAAaV,EAAKC,GAC7B,EAAKK,SAAS,CAACN,KAAK,GAAIC,OAAO,KAElC,IA2CA,OA3CA,8BAED,WACI,MAAuBU,KAAKZ,MAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OACb,OACI,+BAEA,kBAAMW,UAAWC,EAAoBC,SAAUH,KAAKJ,aAApD,WACA,kBACIQ,QAAQ,OACRH,UAAWC,EAFf,mBAKA,kBACID,UAAWC,EACXG,KAAK,OACLC,GAAG,OACHjB,KAAK,OACLK,MAAOL,EACPkB,SAAUP,KAAKT,gBAGnB,kBACIa,QAAQ,QACRH,UAAWC,EAFf,oBAKA,kBACAD,UAAWC,EACXG,KAAK,OACLC,GAAG,QACHjB,KAAK,SACLK,MAAOJ,EACPiB,SAAUP,KAAKT,gBAGf,mBACAU,UAAWC,EADX,6BAOP,OA/DCf,CAAoBqB,EAAAA,WAmEpBC,EAAqB,CACvBV,aAAcW,EAAAA,EAAAA,YAGlB,GAAeC,EAAAA,EAAAA,IAAQ,KAAKF,EAA5B,CAAgDtB,G,UC3EhD,EAAkC,gCAAlC,EAA+E,2BAA/E,EAAwH,4B,UCsBlHsB,EAAqB,CACvBG,eAAgBC,EAAAA,EAAAA,cAGpB,GAAeF,EAAAA,EAAAA,KARS,SAACvB,GAAD,MAAW,CAC/BM,MAAOoB,EAAAA,EAAAA,UAA4B1B,GADf,GAQgBqB,EAAxC,EApBe,SAAC,GAAD,IAAEf,EAAF,EAAEA,MAAOkB,EAAT,EAASA,eAAT,OACX,iBAAKX,UAAWC,EAAhB,WACA,kBAAOD,UAAWC,EAAmBE,QAAQ,SAA7C,oCACA,kBACAH,UAAWC,EACXG,KAAK,OACLX,MAAOA,EACPa,SAAU,SAAAf,GAAC,OAAGoB,EAAepB,EAAEC,OAAOC,MAA3B,EACXY,GAAG,aARQ,IJHXS,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAK/B,KAGHA,EAAoC,qBAAXgC,QAA0BA,OAAOhC,iBAAmBgC,OAAOhC,gBAAgBiC,KAAKD,SAA+B,qBAAbE,UAAgE,oBAA7BA,SAASlC,iBAAkCkC,SAASlC,gBAAgBiC,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOnC,EAAgB6B,EACxB,CKlBD,4HCQA,ICFA,MAJA,SAAkBO,GAChB,MAAuB,kBAATA,GAAqBC,EAAAA,KAAWD,EAC/C,EDEGE,EAAY,GAEPC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,OAAO,IAoBjD,MAjBA,SAAmBC,GACjB,IAAIC,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAG7ET,GAAQE,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,MAAMI,cAMzf,IAAKC,EAASb,GACZ,MAAMc,UAAU,+BAGlB,OAAOd,CACR,EEJD,MApBA,SAAYe,EAASC,EAAKR,GAExB,IAAIS,GADJF,EAAUA,GAAW,CAAC,GACHG,SAAWH,EAAQpB,KAAOA,KAK7C,GAHAsB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPR,EAASA,GAAU,EAEnB,IAAK,IAAIL,EAAI,EAAGA,EAAI,KAAMA,EACxBa,EAAIR,EAASL,GAAKc,EAAKd,GAGzB,OAAOa,CACR,CAED,OAAOG,EAAUF,EAClB,E,kDCbM,SAASG,EAAgBC,EAAUC,GACxC,IAIIC,EAASC,OAAOC,OAAO,MAO3B,OANIJ,GAAUK,EAAAA,SAAAA,IAAaL,GAAU,SAAUM,GAC7C,OAAOA,CACR,IAAEC,SAAQ,SAAUC,GAEnBN,EAAOM,EAAMC,KATF,SAAgBD,GAC3B,OAAOP,IAASS,EAAAA,EAAAA,gBAAeF,GAASP,EAAMO,GAASA,CACxD,CAOqBG,CAAOH,EAC5B,IACMN,CACR,CAiED,SAASU,EAAQJ,EAAOK,EAAM1D,GAC5B,OAAsB,MAAfA,EAAM0D,GAAgB1D,EAAM0D,GAAQL,EAAMrD,MAAM0D,EACxD,CAaM,SAASC,EAAoBC,EAAWC,EAAkBC,GAC/D,IAAIC,EAAmBnB,EAAgBgB,EAAUf,UAC7CA,EA/DC,SAA4BmB,EAAMC,GAIvC,SAASC,EAAeZ,GACtB,OAAOA,KAAOW,EAAOA,EAAKX,GAAOU,EAAKV,EACvC,CALDU,EAAOA,GAAQ,CAAC,EAChBC,EAAOA,GAAQ,CAAC,EAQhB,IAcItC,EAdAwC,EAAkBnB,OAAOC,OAAO,MAChCmB,EAAc,GAElB,IAAK,IAAIC,KAAWL,EACdK,KAAWJ,EACTG,EAAYlC,SACdiC,EAAgBE,GAAWD,EAC3BA,EAAc,IAGhBA,EAAYxC,KAAKyC,GAKrB,IAAIC,EAAe,CAAC,EAEpB,IAAK,IAAIC,KAAWN,EAAM,CACxB,GAAIE,EAAgBI,GAClB,IAAK5C,EAAI,EAAGA,EAAIwC,EAAgBI,GAASrC,OAAQP,IAAK,CACpD,IAAI6C,EAAiBL,EAAgBI,GAAS5C,GAC9C2C,EAAaH,EAAgBI,GAAS5C,IAAMuC,EAAeM,EAC5D,CAGHF,EAAaC,GAAWL,EAAeK,EACxC,CAGD,IAAK5C,EAAI,EAAGA,EAAIyC,EAAYlC,OAAQP,IAClC2C,EAAaF,EAAYzC,IAAMuC,EAAeE,EAAYzC,IAG5D,OAAO2C,CACR,CAmBgBG,CAAmBZ,EAAkBE,GAmCpD,OAlCAf,OAAO0B,KAAK7B,GAAUO,SAAQ,SAAUE,GACtC,IAAID,EAAQR,EAASS,GACrB,IAAKC,EAAAA,EAAAA,gBAAeF,GAApB,CACA,IAAIsB,EAAWrB,KAAOO,EAClBe,EAAWtB,KAAOS,EAClBc,EAAYhB,EAAiBP,GAC7BwB,GAAYvB,EAAAA,EAAAA,gBAAesB,KAAeA,EAAU7E,MAAM+E,IAE1DH,GAAaD,IAAWG,EAQhBF,IAAWD,GAAYG,EAMxBF,GAAWD,IAAWpB,EAAAA,EAAAA,gBAAesB,KAI9ChC,EAASS,IAAO0B,EAAAA,EAAAA,cAAa3B,EAAO,CAClCS,SAAUA,EAASzC,KAAK,KAAMgC,GAC9B0B,GAAIF,EAAU7E,MAAM+E,GACpBE,KAAMxB,EAAQJ,EAAO,OAAQO,GAC7BsB,MAAOzB,EAAQJ,EAAO,QAASO,MAXjCf,EAASS,IAAO0B,EAAAA,EAAAA,cAAa3B,EAAO,CAClC0B,IAAI,IAVNlC,EAASS,IAAO0B,EAAAA,EAAAA,cAAa3B,EAAO,CAClCS,SAAUA,EAASzC,KAAK,KAAMgC,GAC9B0B,IAAI,EACJE,KAAMxB,EAAQJ,EAAO,OAAQO,GAC7BsB,MAAOzB,EAAQJ,EAAO,QAASO,IAZD,CA+BnC,IACMf,CACR,CClID,IAAIsC,EAASnC,OAAOmC,QAAU,SAAUC,GACtC,OAAOpC,OAAO0B,KAAKU,GAAKC,KAAI,SAAUC,GACpC,OAAOF,EAAIE,EACZ,GACF,EAuBGC,EAA+B,SAAUC,GAG3C,SAASD,EAAgBvF,EAAOyF,GAC9B,IAAIC,EAIAC,GAFJD,EAAQF,EAAiBI,KAAK1F,KAAMF,EAAOyF,IAAYvF,MAE9ByF,aAAatE,MAAKwE,EAAAA,EAAAA,GAAuBH,IAUlE,OAPAA,EAAMpG,MAAQ,CACZwG,aAAc,CACZC,YAAY,GAEdJ,aAAcA,EACdK,aAAa,GAERN,CACR,EAlBDO,EAAAA,EAAAA,GAAeV,EAAiBC,GAoBhC,IAAIU,EAASX,EAAgBY,UAqE7B,OAnEAD,EAAOE,kBAAoB,WACzBlG,KAAKmG,SAAU,EACfnG,KAAKL,SAAS,CACZiG,aAAc,CACZC,YAAY,IAGjB,EAEDG,EAAOI,qBAAuB,WAC5BpG,KAAKmG,SAAU,CAChB,EAEDd,EAAgBgB,yBAA2B,SAAkC3C,EAAW4C,GACtF,IDiBmCxG,EAAO8D,ECjBtCD,EAAmB2C,EAAK3D,SACxB8C,EAAea,EAAKb,aAExB,MAAO,CACL9C,SAFgB2D,EAAKR,aDeYhG,ECbc4D,EDaPE,ECbkB6B,EDcvD/C,EAAgB5C,EAAM6C,UAAU,SAAUQ,GAC/C,OAAO2B,EAAAA,EAAAA,cAAa3B,EAAO,CACzBS,SAAUA,EAASzC,KAAK,KAAMgC,GAC9B0B,IAAI,EACJ0B,OAAQhD,EAAQJ,EAAO,SAAUrD,GACjCkF,MAAOzB,EAAQJ,EAAO,QAASrD,GAC/BiF,KAAMxB,EAAQJ,EAAO,OAAQrD,IAEhC,KCtB6E2D,EAAoBC,EAAWC,EAAkB8B,GAC3HK,aAAa,EAEhB,EAGDE,EAAOP,aAAe,SAAsBtC,EAAOqD,GACjD,IAAIC,EAAsB/D,EAAgB1C,KAAKF,MAAM6C,UACjDQ,EAAMC,OAAOqD,IAEbtD,EAAMrD,MAAM8D,UACdT,EAAMrD,MAAM8D,SAAS4C,GAGnBxG,KAAKmG,SACPnG,KAAKL,UAAS,SAAUP,GACtB,IAAIuD,GAAW+D,EAAAA,EAAAA,GAAS,CAAC,EAAGtH,EAAMuD,UAGlC,cADOA,EAASQ,EAAMC,KACf,CACLT,SAAUA,EAEb,IAEJ,EAEDqD,EAAOW,OAAS,WACd,IAAIC,EAAc5G,KAAKF,MACnBU,EAAYoG,EAAYC,UACxBC,EAAeF,EAAYE,aAC3BhH,GAAQiH,EAAAA,EAAAA,GAA8BH,EAAa,CAAC,YAAa,iBAEjEhB,EAAe5F,KAAKZ,MAAMwG,aAC1BjD,EAAWsC,EAAOjF,KAAKZ,MAAMuD,UAAUwC,IAAI2B,GAK/C,cAJOhH,EAAMyG,cACNzG,EAAMkF,aACNlF,EAAMiF,KAEK,OAAdvE,EACkBwG,EAAAA,cAAoBC,EAAAA,EAAAA,SAAiC,CACvEvH,MAAOkG,GACNjD,GAGeqE,EAAAA,cAAoBC,EAAAA,EAAAA,SAAiC,CACvEvH,MAAOkG,GACOoB,EAAAA,cAAoBxG,EAAWV,EAAO6C,GACvD,EAEM0C,CACR,CA3FkC,CA2FjC2B,EAAAA,WAEF3B,EAAgB6B,UAyDZ,CAAC,EACL7B,EAAgB8B,aA5KG,CACjBN,UAAW,MACXC,aAAc,SAAsB3D,GAClC,OAAOA,CACR,GAyKH,Q,oBC3LA,GAAgB,QAAU,yBAAyB,OAAS,yBC+B5D,GAAexC,EAAAA,EAAAA,KAXS,SAACvB,EAAMgI,GAC3B,IAAMC,EAAUvG,EAAAA,EAAAA,eAAiC1B,EAAOgI,EAAS9G,IAEpE,OAAO,UAAI+G,EACX,IAG0B,SAACC,EAAUF,GAAX,MAAwB,CAC/CG,SAAU,kBAAMD,EAAS5G,EAAAA,EAAAA,cAAiC0G,EAAS9G,IAAzD,EADa,GAI3B,EAzBgB,SAAC,GAA8B,IAA7BjB,EAA4B,EAA5BA,KAAKC,EAAuB,EAAvBA,OAASiI,EAAc,EAAdA,SAE5B,OACA,gBAAItH,UAAWC,EAAAA,QAAf,WACA,cAAGD,UAAWC,EAAAA,YAAd,SAAmCb,KACnC,cAAGY,UAAWC,EAAAA,YAAd,SAAmCZ,KACnC,mBACAW,UAAWC,EAAAA,OACXsH,QAASD,EAFT,iBAME,IClBN,EAA8B,iCCA9B,GAAgB,MAAQ,2BAA2B,YAAc,iCAAiC,KAAO,0BAA0B,WAAa,iCC8BhJ,IAAe5G,EAAAA,EAAAA,KAJS,SAACvB,GACrB,MAAQ,CAAEqI,SAAU3G,EAAAA,EAAAA,mBAAqC1B,GAC5D,GAED,EArBoB,SAAC,GAAgB,IAAfqI,EAAc,EAAdA,SAClB,OACA,SAAC,EAAD,CAAiBZ,UAAU,KAAK5G,UAAWC,EAA3C,SACCuH,EAAStC,KAAI,SAAAkC,GAAO,OAErB,SAACK,EAAA,EAAD,CACIC,WAAYC,EACZC,QAAS,IAFb,UAKI,SAAC,EAAD,CAASvH,GAAI+G,EAAQ/G,MAFhBwH,IALY,KAYxB,ICfKC,GAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAqBG,OArBHA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MACF,WACM/H,KAAKF,MAAMkI,gBAIbhI,KAAKF,MAAMmI,kBAHXjI,KAAKF,MAAMoI,QAAQC,QAAQ,SAI5B,mCACH,WACMnI,KAAKF,MAAMkI,iBACbhI,KAAKF,MAAMoI,QAAQC,QAAQ,SAG9B,uBACD,WACA,OACA,iCACI,SAACC,EAAA,EAAD,CAAM/I,KAAM,eACZ,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,GAAD,MACC,OArBH0I,CAAqBvH,EAAAA,WA6BnBC,GAAqB,CACzBwH,gBAAiBvH,EAAAA,GAAAA,eAIrB,IAAeC,EAAAA,EAAAA,KAVS,SAAAvB,GAAK,MAAK,CAC9BiJ,kBAAmBvH,EAAAA,GAAAA,WAA6B1B,GAChD4I,gBAAiBM,EAAAA,gBAA8BlJ,GAFtB,GAUWqB,GAAxC,CAA4DsH,G","sources":["../node_modules/uuid/dist/esm-browser/rng.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/transitions.module.css?292f","components/ContactList/ContactList.jsx","components/views/ContactsView.jsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactFormItem\":\"ContactForm_contactFormItem__hO2j7\",\"contactBtn\":\"ContactForm_contactBtn__Hbm5v\"};","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport contactsOperations from '../redux/contacts/contactsOperations';\nimport styles from './ContactForm.module.css'\n\nclass ContactForm extends Component{\n\n    state={\n        name:'',\n        number:''\n    }\n\n\n    handleChange= e => {\n        const {name, value } = e.target\n            this.setState({[name]:value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const {name,number} = this.state\n        if (name && number){\n        this.props.onAddContact(name,number)\n        this.setState({name:'', number:''})\n        } \n    }\n\n    render(){\n        const {name, number} = this.state\n        return(\n            <>\n            \n            <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n            <label \n                htmlFor='name'\n                className={styles.contactFormItem}\n\n                >Name</label>\n            <input\n                className={styles.contactFormItem}\n                type='text'\n                id='name'\n                name='name'\n                value={name}\n                onChange={this.handleChange}\n                \n            />\n            <label \n                htmlFor='phone'\n                className={styles.contactFormItem}\n            >Phone</label>\n\n            <input\n            className={styles.contactFormItem}\n            type='text'\n            id='phone'\n            name='number'\n            value={number}\n            onChange={this.handleChange}\n            />\n\n            <button \n            className={styles.contactBtn}\n            >Add contact</button>\n\n            </form>\n            </>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    onAddContact: contactsOperations.addContact\n}\n\nexport default connect(null,mapDispatchToProps)(ContactForm)","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterName\":\"Filter_filterName__Y2kKA\",\"filterField\":\"Filter_filterField__hjFfe\"};","import React from 'react'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../redux/contacts/contactsActions';\nimport styles from './Filter.module.css'\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\n\nconst Filter = ({value, onChangeFilter}) =>(\n    <div className={styles.filterContainer}>\n    <label className={styles.filterName} htmlFor='filter'>Find contacts by name</label>\n    <input\n    className={styles.filterField}\n    type='text'\n    value={value}\n    onChange={e=> onChangeFilter(e.target.value)}\n    id='filter'/>\n    </div>\n)\n\nconst mapStateToProps = (state) =>({\n    value: contactsSelectors.getFilter(state)\n})\n\nconst mapDispatchToProps = {\n    onChangeFilter: contactsActions.changeFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChangeFilter: PropTypes.func\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__4zmlP\",\"button\":\"Contact_button__F+kJb\"};","import React from 'react'\nimport styles from './Contact.module.css'\nimport {connect} from 'react-redux'\nimport contactsOperations from '../redux/contacts/contactsOperations';\nimport PropTypes from 'prop-types';\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\n\nconst Contact = ({name,number , onRemove}) => {\n    // console.log('Comtact re-render', name)\n    return(\n    <li className={styles.contact}>\n    <p className={styles.contactData}>{name}</p>\n    <p className={styles.contactData}>{number}</p>\n    <button \n    className={styles.button} \n    onClick={onRemove}\n    >X</button>\n    </li>\n    \n    )}\n\nconst mapStateToProps = (state,ownProps) => {\n    const contact = contactsSelectors.getContactById(state, ownProps.id)\n \n return {...contact}\n};\n\n\nconst mapDispatchToProps = (dispatch, ownProps) =>({\n    onRemove: () => dispatch(contactsOperations.removeContact(ownProps.id))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Contact);\n\n\nContact.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onRemove: PropTypes.func\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contact\":\"ContactList_contact__0STHS\",\"button\":\"ContactList_button__7kL4l\"};","// extracted by mini-css-extract-plugin\nexport default {\"enter\":\"transitions_enter__qLqdY\",\"enterActive\":\"transitions_enterActive__G9f8+\",\"exit\":\"transitions_exit__Nylr9\",\"exitActive\":\"transitions_exitActive__kr47r\"};","import React from 'react'\nimport {connect} from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition , TransitionGroup} from 'react-transition-group'\n// import PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact'\nimport styles from './ContactList.module.css'\nimport transitions from './transitions.module.css'\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\n\nconst ContactList = ({contacts}) => {\n    return(\n    <TransitionGroup component='ul' className={styles.contactList}>\n    {contacts.map(contact => \n        \n    <CSSTransition \n        classNames={transitions}\n        timeout={200}\n        key={uuidv4()}> \n        \n        <Contact id={contact.id}/>\n       \n    </CSSTransition> )}\n    </TransitionGroup>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return ({ contacts: contactsSelectors.getVisibleContacts(state) })\n}\n\nexport default connect(mapStateToProps)(ContactList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\nimport { authSelectors } from '../redux/auth';\nimport { Logo } from '../Logo/Logo';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\n\n\nclass ContactsView extends Component {\n    componentDidMount(){\n      if(!this.props.isAuthenticated){\n        this.props.history.replace('/login')\n        return\n      }\n        this.props.onFetchContacts();\n      }\n    componentDidUpdate(){\n      if(!this.props.isAuthenticated){\n        this.props.history.replace('/login')\n        return\n      }\n    }  \n    render(){\n    return(\n    <>\n        <Logo name={'Phonebook'}/>\n        <ContactForm/>\n        <Filter/>\n        <ContactList/>\n    </>)}\n}\n\nconst mapStateToProps = state => ({\n    isLoadingContacts: contactsSelectors.getLoading(state),\n    isAuthenticated: authSelectors.isAuthenticated(state)\n  })\n  \n  const mapDispatchToProps = {\n    onFetchContacts: contactsOperations.fetchContacts,\n    \n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView)"],"names":["getRandomValues","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","className","styles","onSubmit","htmlFor","type","id","onChange","Component","mapDispatchToProps","contactsOperations","connect","onChangeFilter","contactsActions","contactsSelectors","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify","getChildMapping","children","mapFn","result","Object","create","Children","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","exit","enter","values","obj","map","k","TransitionGroup","_React$Component","context","_this","handleExited","call","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","component","childFactory","_objectWithoutPropertiesLoose","React","TransitionGroupContext","propTypes","defaultProps","ownProps","contact","dispatch","onRemove","onClick","contacts","CSSTransition","classNames","transitions","timeout","uuidv4","ContactsView","isAuthenticated","onFetchContacts","history","replace","Logo","isLoadingContacts","authSelectors"],"sourceRoot":""}